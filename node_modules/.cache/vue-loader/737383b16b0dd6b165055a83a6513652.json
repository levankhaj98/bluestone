{"remainingRequest":"/home/levankhai/Downloads/test/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/levankhai/Downloads/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/levankhai/Downloads/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/levankhai/Downloads/test/src/components/CardForm.vue?vue&type=template&id=5fb0fa24&","dependencies":[{"path":"/home/levankhai/Downloads/test/src/components/CardForm.vue","mtime":1611152903468},{"path":"/home/levankhai/Downloads/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/levankhai/Downloads/test/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/levankhai/Downloads/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/levankhai/Downloads/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}